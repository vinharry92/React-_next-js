{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\React + next JS\\\\pages\\\\index.js\";\nimport React from \"react\";\nimport fetch from 'isomorphic-unfetch';\nimport Layout from '../Components/Layout'; // const Index = (props) =>(\n//     <Layout>\n//         <div>\n//          <h1>Welome to React Next JS</h1>\n//          {props.children}\n//         </div>\n//     </Layout>\n// );\n// Index.getInitialProps = async function()\n// {\n//     const res = await fetch('http://localhost:50607/api/item');\n//     const data = await res.json();\n//     console.log(data);\n//     return{\n//         items : data\n//     }\n// }\n\nvar Index =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Index, _React$Component);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Index).call(this, props));\n    _this.state = {\n      error: null,\n      isLoaded: false,\n      items: []\n    };\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch(\"https://api.example.com/items\").then(function (res) {\n        return res.json();\n      }).then(function (result) {\n        _this2.setState({\n          isLoaded: true,\n          items: result.items\n        });\n      }, // Note: it's important to handle errors here\n      // instead of a catch() block so that we don't swallow\n      // exceptions from actual bugs in components.\n      function (error) {\n        _this2.setState({\n          isLoaded: true,\n          error: error\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          error = _this$state.error,\n          isLoaded = _this$state.isLoaded,\n          items = _this$state.items;\n\n      if (error) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64\n          },\n          __self: this\n        }, \"Error: \", error.message);\n      } else if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, \"Loading...\");\n      } else {\n        return React.createElement(\"ul\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, items.map(function (item) {\n          return React.createElement(\"li\", {\n            key: item.name,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, item.name, \" \", item.price);\n        }));\n      }\n    }\n  }]);\n\n  return Index;\n}(React.Component);\n\nexport default Index;","map":{"version":3,"sources":["D:\\React + next JS\\pages\\index.js"],"names":["fetch","Layout","Index","props","state","error","isLoaded","items","then","res","json","result","setState","message","map","item","name","price","React","Component"],"mappings":";;;;;;;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,OAAOC,MAAP,MAAmB,sBAAnB,C,CAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;IAIMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,+EAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,IADI;AAEXC,MAAAA,QAAQ,EAAE,KAFC;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAFiB;AAOlB;;;;wCAEmB;AAAA;;AAClBP,MAAAA,KAAK,CAAC,+BAAD,CAAL,CACGQ,IADH,CACQ,UAAAC,GAAG;AAAA,eAAIA,GAAG,CAACC,IAAJ,EAAJ;AAAA,OADX,EAEGF,IAFH,CAGI,UAACG,MAAD,EAAY;AACV,QAAA,MAAI,CAACC,QAAL,CAAc;AACZN,UAAAA,QAAQ,EAAE,IADE;AAEZC,UAAAA,KAAK,EAAEI,MAAM,CAACJ;AAFF,SAAd;AAID,OARL,EASI;AACA;AACA;AACA,gBAACF,KAAD,EAAW;AACT,QAAA,MAAI,CAACO,QAAL,CAAc;AACZN,UAAAA,QAAQ,EAAE,IADE;AAEZD,UAAAA,KAAK,EAALA;AAFY,SAAd;AAID,OAjBL;AAmBD;;;6BAEQ;AAAA,wBAC4B,KAAKD,KADjC;AAAA,UACCC,KADD,eACCA,KADD;AAAA,UACQC,QADR,eACQA,QADR;AAAA,UACkBC,KADlB,eACkBA,KADlB;;AAEP,UAAIF,KAAJ,EAAW;AACT,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAaA,KAAK,CAACQ,OAAnB,CAAP;AACD,OAFD,MAEO,IAAI,CAACP,QAAL,EAAe;AACpB,eAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAP;AACD,OAFM,MAEA;AACL,eACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACGC,KAAK,CAACO,GAAN,CAAU,UAAAC,IAAI;AAAA,iBACb;AAAI,YAAA,GAAG,EAAEA,IAAI,CAACC,IAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aACGD,IAAI,CAACC,IADR,OACeD,IAAI,CAACE,KADpB,CADa;AAAA,SAAd,CADH,CADF;AASD;AACF;;;;EAjDeC,KAAK,CAACC,S;;AAqD1B,eAAejB,KAAf","sourcesContent":["\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Layout from '../Components/Layout';\r\n\r\n// const Index = (props) =>(\r\n//     <Layout>\r\n//         <div>\r\n//          <h1>Welome to React Next JS</h1>\r\n//          {props.children}\r\n\r\n//         </div>\r\n//     </Layout>\r\n// );\r\n\r\n// Index.getInitialProps = async function()\r\n// {\r\n//     const res = await fetch('http://localhost:50607/api/item');\r\n//     const data = await res.json();\r\n//     console.log(data);\r\n\r\n\r\n//     return{\r\n//         items : data\r\n//     }\r\n// }\r\n\r\n\r\n\r\nclass Index extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        error: null,\r\n        isLoaded: false,\r\n        items: []\r\n      };\r\n    }\r\n  \r\n    componentDidMount() {\r\n      fetch(\"https://api.example.com/items\")\r\n        .then(res => res.json())\r\n        .then(\r\n          (result) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              items: result.items\r\n            });\r\n          },\r\n          // Note: it's important to handle errors here\r\n          // instead of a catch() block so that we don't swallow\r\n          // exceptions from actual bugs in components.\r\n          (error) => {\r\n            this.setState({\r\n              isLoaded: true,\r\n              error\r\n            });\r\n          }\r\n        )\r\n    }\r\n  \r\n    render() {\r\n      const { error, isLoaded, items } = this.state;\r\n      if (error) {\r\n        return <div>Error: {error.message}</div>;\r\n      } else if (!isLoaded) {\r\n        return <div>Loading...</div>;\r\n      } else {\r\n        return (\r\n          <ul>\r\n            {items.map(item => (\r\n              <li key={item.name}>\r\n                {item.name} {item.price}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        );\r\n      }\r\n    }\r\n  }\r\n\r\n\r\nexport default Index;\r\n"]},"metadata":{},"sourceType":"module"}