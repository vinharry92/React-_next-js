{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"D:\\\\POC_Douments\\\\nextjsapp\\\\pages\\\\AddRecord.js\";\nimport React, { Component } from \"react\";\nimport Link from \"next/link\";\nimport fetch from 'isomorphic-fetch';\nimport Layout from \"../Components/Layout\";\nimport { Col, Form, FormGroup, Label, Input, Button, ButtonDropdown, DropdownMenu, DropdownItem, DropdownToggle } from 'reactstrap';\n\nvar AddRecord =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddRecord, _Component);\n\n  function AddRecord(props) {\n    var _this;\n\n    _classCallCheck(this, AddRecord);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddRecord).call(this, props));\n    _this.onChangeName = _this.onChangeName.bind(_assertThisInitialized(_this));\n    _this.onChangeDescription = _this.onChangeDescription.bind(_assertThisInitialized(_this));\n    _this.onChangeIscomplete = _this.onChangeIscomplete.bind(_assertThisInitialized(_this)); // this.onChangeSelect = this.onChangeSelect.bind(this);\n\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    _this.toggle = _this.toggle.bind(_assertThisInitialized(_this));\n    _this.select = _this.select.bind(_assertThisInitialized(_this));\n    _this.state = {\n      dropdownOpen: false,\n      flavor: \"\",\n      Name: '',\n      description: '',\n      Iscomplete: '',\n      test: '',\n      data: [],\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(AddRecord, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:50607/api/item').then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this2.setState({\n          isLoaded: true,\n          data: json\n        });\n      });\n    } // onChangeSelect(e) {\n    //   this.setState({\n    //     flavor: e.target.value\n    //   });\n    // }\n\n  }, {\n    key: \"onChangeName\",\n    value: function onChangeName(e) {\n      this.setState({\n        Name: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangeDescription\",\n    value: function onChangeDescription(e) {\n      this.setState({\n        description: e.target.value\n      });\n    }\n  }, {\n    key: \"onChangeIscomplete\",\n    value: function onChangeIscomplete(e) {\n      this.setState({\n        Iscomplete: e.target.value\n      });\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit(e) {\n      e.preventDefault(); //console.log(`The values are ${this.state.Name}, ${this.state.description}, and ${this.state.Iscomplete}`)\n\n      var obj = {};\n      obj['name'] = this.state.Name;\n      obj['description'] = this.state.description;\n      obj['isComplete'] = this.state.isComplete;\n      obj['Flavor'] = this.state.test;\n      var formData = new FormData();\n\n      for (var name in obj) {\n        formData.append(name, obj[name]);\n      }\n\n      fetch('http://localhost:50607/api/item/createasync', {\n        method: 'POST',\n        body: formData\n      }).then(function (response) {\n        console.log(response);\n      });\n    }\n  }, {\n    key: \"toggle\",\n    value: function toggle() {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen\n      });\n    }\n  }, {\n    key: \"select\",\n    value: function select(event) {\n      this.setState({\n        dropdownOpen: !this.state.dropdownOpen,\n        test: event.target.innerText\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          isLoaded = _this$state.isLoaded,\n          data = _this$state.data;\n\n      if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113\n          },\n          __self: this\n        }, \"Loading....\");\n      }\n\n      return React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117\n        },\n        __self: this\n      }, React.createElement(Form, {\n        className: \"form\",\n        onSubmit: this.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 118\n        },\n        __self: this\n      }, React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, \"Name\"), React.createElement(Input, {\n        type: \"text\",\n        value: this.state.Name,\n        onChange: this.onChangeName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, \"Description\"), React.createElement(Input, {\n        type: \"text\",\n        value: this.state.description,\n        onChange: this.onChangeDescription,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Iscomplete\"), React.createElement(Input, {\n        type: \"checkbox\",\n        checked: this.state.Iscomplete,\n        onChange: this.onChangeIscomplete,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 134\n        },\n        __self: this\n      }))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 138\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 139\n        },\n        __self: this\n      }, \"Pick your favorite flavor:\"), React.createElement(ButtonDropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, this.state.test), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, React.createElement(DropdownItem, {\n        onClick: this.select,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145\n        },\n        __self: this\n      }, \"Work\"), React.createElement(DropdownItem, {\n        onClick: this.select,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 146\n        },\n        __self: this\n      }, \"Contact\"))))), React.createElement(Col, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Label, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }, \"Pick your Name:\"), React.createElement(ButtonDropdown, {\n        isOpen: this.state.dropdownOpen,\n        toggle: this.toggle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(DropdownToggle, {\n        caret: true,\n        size: \"lg\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \" Name \"), React.createElement(DropdownMenu, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 159\n        },\n        __self: this\n      }, data.map(function (thing) {\n        return React.createElement(DropdownItem, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161\n          },\n          __self: this\n        }, thing.name);\n      }))))), React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, \"Submit\"), React.createElement(Link, {\n        href: \"/\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(Button, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, \"Return to dashboard\"))));\n    }\n  }]);\n\n  return AddRecord;\n}(Component);\n\nexport default AddRecord;","map":{"version":3,"sources":["D:\\POC_Douments\\nextjsapp\\pages\\AddRecord.js"],"names":["React","Component","Link","fetch","Layout","Col","Form","FormGroup","Label","Input","Button","ButtonDropdown","DropdownMenu","DropdownItem","DropdownToggle","AddRecord","props","onChangeName","bind","onChangeDescription","onChangeIscomplete","onSubmit","toggle","select","state","dropdownOpen","flavor","Name","description","Iscomplete","test","data","isLoaded","then","res","json","setState","e","target","value","preventDefault","obj","isComplete","formData","FormData","name","append","method","body","response","console","log","event","innerText","map","thing"],"mappings":"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","sourcesContent":["import React ,{ Component } from \"react\";\r\nimport Link from \"next/link\";\r\nimport fetch from 'isomorphic-fetch';\r\nimport Layout from \"../Components/Layout\";\r\nimport {\r\n   Col, Form,\r\n  FormGroup, Label, Input,\r\n  Button,ButtonDropdown,DropdownMenu,DropdownItem,DropdownToggle\r\n} from 'reactstrap';\r\n\r\n\r\n\r\n\r\n\r\n\r\nclass AddRecord extends Component{\r\n\r\n    constructor(props) {\r\n        super(props);    \r\n\r\n      this.onChangeName = this.onChangeName.bind(this);\r\n      this.onChangeDescription = this.onChangeDescription.bind(this);\r\n      this.onChangeIscomplete = this.onChangeIscomplete.bind(this);\r\n      // this.onChangeSelect = this.onChangeSelect.bind(this);\r\n      this.onSubmit = this.onSubmit.bind(this);\r\n\r\n      this.toggle = this.toggle.bind(this);\r\n      this.select = this.select.bind(this);\r\n      \r\n      this.state = {\r\n        dropdownOpen: false,\r\n          flavor:\"\",\r\n          Name: '',\r\n          description: '',\r\n          Iscomplete:'',\r\n          test:'',\r\n          data: [],\r\n          isLoaded:false\r\n      }\r\n  }\r\n\r\n\r\n  componentDidMount()\r\n  {\r\n      fetch('http://localhost:50607/api/item').then(res => res.json()).then(json => {\r\n      this.setState({\r\n          isLoaded:true,\r\n          data:json,  \r\n      })\r\n  });\r\n  }\r\n  // onChangeSelect(e) {\r\n  //   this.setState({\r\n  //     flavor: e.target.value\r\n  //   });\r\n  // }\r\n\r\n  onChangeName(e) {\r\n    this.setState({\r\n      Name: e.target.value\r\n    });\r\n  }\r\n  onChangeDescription(e) {\r\n    this.setState({\r\n      description: e.target.value\r\n    })  \r\n  }\r\n  onChangeIscomplete(e) {\r\n    this.setState({\r\n      Iscomplete: e.target.value\r\n    })\r\n  }\r\n\r\n  onSubmit(e) {\r\n    e.preventDefault();\r\n    //console.log(`The values are ${this.state.Name}, ${this.state.description}, and ${this.state.Iscomplete}`)\r\n \r\n    const obj = {}; \r\n    obj[ 'name' ] = this.state.Name;       \r\n    obj[ 'description' ] = this.state.description;\r\n    obj['isComplete'] = this.state.isComplete;\r\n    obj['Flavor'] = this.state.test;\r\n    var formData  = new FormData();\r\n    for(var name in obj) {\r\n    formData.append(name, obj[name]);\r\n  }\r\n  fetch('http://localhost:50607/api/item/createasync', {\r\n    method: 'POST',\r\n    body: formData\r\n  }).then(function (response) {\r\n    console.log(response);\r\n  });\r\n\r\n}\r\n\r\ntoggle() {\r\n  this.setState({\r\n    dropdownOpen: !this.state.dropdownOpen\r\n  });\r\n}\r\nselect(event) {\r\n  this.setState({\r\n    dropdownOpen: !this.state.dropdownOpen,\r\n    test: event.target.innerText,\r\n  });\r\n}\r\n\r\n    render()\r\n    {\r\n      var { isLoaded, data } = this.state;\r\n      if(!isLoaded)\r\n      {\r\n          return <div>Loading....</div>;\r\n      }\r\n     \r\n        return(\r\n        <Layout>\r\n            <Form className=\"form\" onSubmit={this.onSubmit}>\r\n            <Col>\r\n            <FormGroup>\r\n             <Label>Name</Label>\r\n              <Input type=\"text\"  value={this.state.Name} onChange={this.onChangeName} />\r\n            </FormGroup>\r\n            </Col>\r\n            <Col>\r\n            <FormGroup>\r\n             <Label>Description</Label>\r\n             <Input type=\"text\" value={this.state.description} onChange={this.onChangeDescription}  />\r\n            </FormGroup>\r\n            </Col>\r\n            <Col>\r\n            <FormGroup>\r\n             <Label>Iscomplete</Label>\r\n            <Input type=\"checkbox\"  checked={this.state.Iscomplete} onChange={this.onChangeIscomplete}  />\r\n            </FormGroup>\r\n            </Col>\r\n            <Col>\r\n            <FormGroup>\r\n              <Label>\r\n              Pick your favorite flavor:\r\n              </Label>\r\n             <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle} >\r\n                <DropdownToggle caret>{this.state.test}</DropdownToggle>\r\n                <DropdownMenu>\r\n               <DropdownItem onClick={this.select}>Work</DropdownItem>\r\n               <DropdownItem onClick={this.select}>Contact</DropdownItem>\r\n                </DropdownMenu>\r\n            </ButtonDropdown>\r\n            </FormGroup>\r\n            </Col>\r\n\r\n            <Col>\r\n            <FormGroup>\r\n              <Label>\r\n              Pick your Name:\r\n              </Label>\r\n              <ButtonDropdown isOpen={this.state.dropdownOpen} toggle={this.toggle}>\r\n               <DropdownToggle caret size=\"lg\"> Name </DropdownToggle>\r\n                <DropdownMenu>\r\n                {data.map(thing=>\r\n                    <DropdownItem>{thing.name}</DropdownItem>\r\n                )}\r\n               </DropdownMenu>\r\n              </ButtonDropdown>\r\n            </FormGroup>\r\n            </Col>\r\n\r\n\r\n            <Button>Submit</Button>\r\n            <Link href='/'>\r\n                    <Button>Return to dashboard</Button>\r\n                </Link>\r\n          </Form>\r\n            </Layout>\r\n          \r\n        );\r\n    }\r\n}\r\n\r\nexport default AddRecord;"]},"metadata":{},"sourceType":"module"}