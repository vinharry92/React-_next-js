{"ast":null,"code":"import _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar _jsxFileName = \"D:\\\\POC_Douments\\\\nextjsapp\\\\pages\\\\home.js\";\nimport React, { Component } from \"react\";\nimport Link from \"next/link\";\nimport fetch from 'isomorphic-fetch';\nimport Layout from \"../Components/Layout\";\nimport { Table, Col, Row } from 'react-bootstrap';\nimport { Button } from 'reactstrap';\nimport ReactDataGrid from 'react-data-grid';\n\nvar Home =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Home, _Component);\n\n  function Home(props) {\n    var _this;\n\n    _classCallCheck(this, Home);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Home).call(this, props));\n\n    _defineProperty(_assertThisInitialized(_this), \"getKeys\", function () {\n      return _Object$keys(this.props.data[0]);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getHeader\", function () {\n      var keys = this.getKeys();\n      return keys.map(function (key, index) {\n        return React.createElement(\"th\", {\n          key: key,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 37\n          },\n          __self: this\n        }, key.toUpperCase());\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getRowsData\", function () {\n      var items = this.props.data;\n      var keys = this.getKeys();\n      return items.map(function (row, index) {\n        return React.createElement(\"tr\", {\n          key: index,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }, React.createElement(RenderRow, {\n          key: index,\n          data: row,\n          keys: keys,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 46\n          },\n          __self: this\n        }));\n      });\n    });\n\n    _this.state = {\n      data: [],\n      isLoaded: false\n    };\n    return _this;\n  }\n\n  _createClass(Home, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      fetch('http://localhost:50607/api/item').then(function (res) {\n        return res.json();\n      }).then(function (json) {\n        _this2.setState({\n          isLoaded: true,\n          data: json\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var RenderRow = function RenderRow(props) {\n        return props.keys.map(function (key, index) {\n          return React.createElement(\"td\", {\n            key: props.data[key],\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55\n            },\n            __self: this\n          }, props.data[key]);\n        });\n      };\n\n      var _this$state = this.state,\n          isLoaded = _this$state.isLoaded,\n          data = _this$state.data;\n\n      if (!isLoaded) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"Loading....\");\n      }\n\n      return React.createElement(Layout, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(ReactDataGrid, {\n        columns: columns,\n        rowGetter: rowGetter,\n        rowsCount: rows.length,\n        minHeight: 500,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }, \"Gudid Data\"), React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, React.createElement(Col, {\n        mdoffset: 10,\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, React.createElement(Link, {\n        href: \"/AddRecord\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Button, {\n        className: \"nav-link\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, \"AddRecord\")))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Col, {\n        md: 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, React.createElement(Table, {\n        responsive: true,\n        striped: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, this.getHeader())), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.getRowsData()))))));\n    }\n  }]);\n\n  return Home;\n}(Component);\n\nexport default Home;","map":{"version":3,"sources":["D:\\POC_Douments\\nextjsapp\\pages\\home.js"],"names":["React","Component","Link","fetch","Layout","Table","Col","Row","Button","ReactDataGrid","Home","props","data","keys","getKeys","map","key","index","toUpperCase","items","row","state","isLoaded","then","res","json","setState","RenderRow","columns","rowGetter","rows","length","getHeader","getRowsData"],"mappings":"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","sourcesContent":["import React ,{ Component } from \"react\";\r\nimport Link from \"next/link\";\r\nimport fetch from 'isomorphic-fetch';\r\nimport Layout from \"../Components/Layout\";\r\nimport { Table, Col, Row } from 'react-bootstrap';\r\nimport { Button,\r\n  } from 'reactstrap';\r\n  import ReactDataGrid from 'react-data-grid';\r\n\r\nclass Home extends Component{  \r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            data: [],\r\n            isLoaded:false,\r\n        }\r\n    }\r\n    componentDidMount()\r\n    {\r\n        fetch('http://localhost:50607/api/item').then(res => res.json()).then(json => {\r\n        this.setState({\r\n            isLoaded:true,\r\n            data:json,  \r\n        })\r\n    });\r\n    }\r\n\r\n\r\ngetKeys = function(){\r\n return Object.keys(this.props.data[0]);\r\n }\r\n\r\n getHeader = function(){\r\n    var keys = this.getKeys();\r\n    return keys.map((key, index)=>{\r\n    return <th key={key}>{key.toUpperCase()}</th>\r\n    })\r\n    }\r\n\r\n \r\n    getRowsData = function(){\r\n        var items = this.props.data;\r\n        var keys = this.getKeys();\r\n        return items.map((row, index)=>{\r\n        return <tr key={index}><RenderRow key={index} data={row} keys={keys}/></tr>\r\n        })\r\n        }\r\n\r\n\r\n    render()\r\n    {\r\n        const RenderRow = (props) =>{\r\n            return props.keys.map((key, index)=>{\r\n            return <td key={props.data[key]}>{props.data[key]}</td>\r\n            })\r\n           }\r\n       var { isLoaded, data } = this.state;\r\n        if(!isLoaded)\r\n        {\r\n            return <div>Loading....</div>;\r\n        }\r\n       \r\n        return(\r\n\r\n           <Layout>\r\n<ReactDataGrid\r\n    columns={columns}\r\n    rowGetter={rowGetter}\r\n    rowsCount={rows.length}\r\n    minHeight={500} />\r\n\r\n                  <div>\r\n                <h1>Gudid Data</h1>               \r\n                <div>\r\n                    \r\n                </div>\r\n                <Row>\r\n                    <Col mdoffset={10} md={2}>\r\n                        <Link href ='/AddRecord'>\r\n                            <Button className='nav-link'>AddRecord</Button>\r\n                        </Link>\r\n                    </Col>\r\n                </Row>\r\n                <br />\r\n                <Row>\r\n                    <Col md={12}>\r\n                        <Table responsive striped>\r\n\r\n<thead>\r\n <tr>{this.getHeader()}</tr>\r\n </thead>\r\n <tbody>\r\n {this.getRowsData()}\r\n </tbody>\r\n \r\n\r\n\r\n\r\n                            {/* <thead>\r\n                                <tr>\r\n                                    <th>Id</th>\r\n                                    <th>Name</th>\r\n                                    <th>Description</th>\r\n                                    <th>Iscomplete</th>      \r\n                                    <th>Flavor</th>                              \r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                     {data.map(item => {\r\n                                     return (\r\n                                      <tr>\r\n                                        <td>\r\n                                        {item.id}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                       {item.name}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                        {item.description}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                        {item.isComplete}\r\n                                        </td>\r\n\r\n                                        <td>\r\n                                        {item.Flavor}\r\n                                        </td>\r\n\r\n                                        </tr>\r\n                                        \r\n                                        );\r\n                                        })}\r\n                            </tbody> */}\r\n                        </Table>\r\n                    </Col>\r\n                </Row>\r\n               </div>\r\n            </Layout>\r\n\r\n\r\n\r\n        );\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}